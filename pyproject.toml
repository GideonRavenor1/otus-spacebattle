[tool.black]
line-length = 120

[tool.ruff]
line-length = 120
target-version = "py311"
select = ["ALL"]

ignore = [
    # [docstrings]
    # Ignore google docstring format
    "D",

    # [flake8-annotations]
    # Missing type annotation for self in method
    "ANN101",
    # Missing type annotation for cls in classmethod
    "ANN102",
    # Missing type annotation for args
    "ANN002",
    # Missing type annotation for kwargs
    "ANN003",
    # Missing type annotation for special method "__init__()"
    "ANN204",
    "ANN401",

    # [flake8-isort]
    # Ignore import in the wrong position
    "I001",

    # [flake8-bandit]
    # Ignore hardcoded password
    "S105",

    # Ignore raise from raise
    "B904",

    # Ignore catch Exception
    "BLE001",

    # Ignore string/docstring/comment contains unicode character
    "RUF001",
    "RUF002",
    "RUF003",

    # Assign string to variable before exception
    "EM101",
    # Use of `assert` detected
    "S101",
    # Unused method argument
    "ARG002",
    # Move application import into a type-checking block
    "TCH001",
    "TCH002",
    "TCH003",
    # Exception name should be named with an Error suffix
    "N818",
    # Refactor
    "PLR",
    # Avoid specifying long messages outside the exception class
    "TRY003",
    # Use `raise from` to specify exception cause
    "TRY200",
    # Unused blanket `noqa` directive
    "PGH004",
    "RUF100",
    "S608"
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".idea",
    "__pypackages__",
    "__pycache__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".pytest_cache"
]

[tool.ruff.per-file-ignores]
"*/__init__.py" = ["F401"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.poetry]
name = "otus-spacebattle"
version = "0.1.0"
description = "Выработка навыка применения SOLID принципов на примере игры 'Космическая битва'"
authors = ["Fedor Obolikhin <fedor.obolikhin@amonitoring.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pytest = "^7.2.2"
black = "^23.3.0"
ruff = "^0.0.269"
pre-commit = "^3.2.1"
pika = "^1.3.2"
pyjwt = "^2.7.0"
python-dotenv = "^1.0.0"
pika-stubs = "^0.1.3"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
